// <auto-generated />
using System;
using KokoPizza.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KokoPizza.Persistance.Migrations
{
    [DbContext(typeof(KokoPizzaDbContext))]
    [Migration("20220103133426_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KokoPizza.Core.Domain.Entities.WeatherForecast", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<long?>("LastModifiedBy")
                        .HasColumnType("bigint")
                        .HasColumnName("last_modified_by");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified_date");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("summary");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("integer")
                        .HasColumnName("temperature_c");

                    b.HasKey("Id")
                        .HasName("pk_weather_forecasts");

                    b.ToTable("weather_forecasts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 3, 13, 34, 26, 708, DateTimeKind.Utc).AddTicks(8720),
                            Date = new DateTime(2022, 1, 4, 13, 34, 26, 708, DateTimeKind.Utc).AddTicks(8703),
                            Summary = "Warm",
                            TemperatureC = 29
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 3, 13, 34, 26, 708, DateTimeKind.Utc).AddTicks(8722),
                            Date = new DateTime(2022, 1, 5, 13, 34, 26, 708, DateTimeKind.Utc).AddTicks(8721),
                            Summary = "Freezing",
                            TemperatureC = -5
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 3, 13, 34, 26, 708, DateTimeKind.Utc).AddTicks(8724),
                            Date = new DateTime(2022, 1, 6, 13, 34, 26, 708, DateTimeKind.Utc).AddTicks(8723),
                            Summary = "Chilly",
                            TemperatureC = 52
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 3, 13, 34, 26, 708, DateTimeKind.Utc).AddTicks(8725),
                            Date = new DateTime(2022, 1, 7, 13, 34, 26, 708, DateTimeKind.Utc).AddTicks(8725),
                            Summary = "Balmy",
                            TemperatureC = 42
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 1, 3, 13, 34, 26, 708, DateTimeKind.Utc).AddTicks(8727),
                            Date = new DateTime(2022, 1, 8, 13, 34, 26, 708, DateTimeKind.Utc).AddTicks(8726),
                            Summary = "Chilly",
                            TemperatureC = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
